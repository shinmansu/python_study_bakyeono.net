# 매개변수를 좀 더 유연하게 사용해보기

'''
코드 3-15 반올림 자리를 지정할 수 있는 round() 함수

round(3.1415)     # 매개변수를 하나만 전달
3

round(3.1415, 2)  # 두 번째 매개변수로 반올림 자리 지정
3.14
round() 함수의 두 번째 매개변수는 인자를 전달할 수도 있지만, 꼭 필요하지 않다면 생략할 수도 있다. 이렇게 매개변수를 ‘옵션(option, 선택사항)’으로 정의해 두면 함수를 사용할 때 편리하다.

'''

# def multiply(a=2, b=4):  # ❶ 첫번째 매개변수에만 기본값을 정의했다
#      """a와 b의 곱을 계산한다."""
#      return a * b
#
# print(multiply())

'''
1의 함수 정의에서는 첫번째 매개변수 a에만 기본값을 정의했고,
생략해도 되며, 1개만 넣을 경우 A에 값을 넣는다 
그 다음 매개변수 b에는 기본값을 정의하지 않았다. 
이 함수를 호출할 때 값을 하나만 전달한다면, 생략한 변수가 a인지 b인지 알 수 없을 것이다.
파이썬은 이런 함수의 정의를 허용하지 않으며, 문법 오류(SyntaxError)를 알려준다. 
다음과 같이 매개변수 b에도 기본값을 정의해 주면 오류가 발생하지 않는다.
개념 정리

매개변수에 기본값을 지정할 수 있다.
매개변수에 기본값을 지정해 두면, 인자 전달을 생략할 수 있다.

'''
#
# def 동전계산(오백원=0, 백원=0, 오십원=0, 십원=0):
#     """동전의 개수를 입력 받아 돈의 합게를 계산한다"""
#     return 오백원 * 500 + 백원 * 100 + 오십원 * 50 + 십원 * 10
#
# print(동전계산())
# print(동전계산(1,10,0,100))
# print(동전계산(십원=220))
# print(동전계산(백원=3, 오십원=2))
# print(동전계산(백원=9, 오백원=10))