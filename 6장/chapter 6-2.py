#6.2 반복

'''
반복이란 같은 작업을 여러 번 실행하는 것이다. 매일 아침 7시에 전화벨 울리기, 영화표 구매가 가능한지 5분마다 확인하기, 숫자를 세다가 3, 6, 9가 나오면 박수 치기…

반복 작업을 프로그래밍하는 방법
숫자를 1부터 4까지 차례대로 화면에 출력하는 프로그램을 작성해 보자.
'''


#코드 6-16 1부터 4까지 출력하는 프로그램 1

print(1)
print(2)
print(3)
print(4)


'''
두 번째 문제는 이 프로그램이 ‘작업의 반복’이 아니라 ‘작업들’을 지시한다는 점이다. “네 번 하시오.”가 아니라 “하시오. 하시오. 하시오. 하시오.”라고 지시하는 것이다. 반복할 횟수가 많아질수록 프로그래머가 작성해야 할 ‘하시오’ 코드도 많아질 것이다. 게다가 몇 번이나 반복해야 할지 미리 알 수 없는 경우에는 이 방법을 아예 쓸 수 없다.

이 문제를 하나씩 해결하며, 반복 작업을 우아하게 지시하는 방법을 알아 보자.
'''

#6.2.2 반복의 한 주기를 온전히 나타내기


#코드 6-17 코드 6-16의 한 주기

print(1)

# 코드 6-18 온전히 표현한 한 단계의 작업

number = 0
number += 1     # 수를 1 증가시킨다
print(number)   # 수를 출력한다


#코드 6-19 1부터 4까지 출력하는 프로그램 2

number = 0      # 수를 세기 위해 변수가 필요하다

number += 1     # 수를 1 증가시킨다
print(number)   # 수를 출력한다
number += 1
print(number)
number += 1
print(number)
number += 1
print(number)

#개념 정리
#반복 코드를 작성할 때는 반복의 한 주기를 온전히 파악하고 작성하는 것이 중요하다.

#6.2.3 while 문: 조건이 유지되는 동안 반복하기


'''
while 문은 지정한 조건이 유지되는 동안 코드를 계속 반복하는 명령이다. while 문은 기능이 단순해서 사용하기 다소 불편할 때도 있지만,
특별한 제약 없이 다양한 반복 처리를 수행할 수 있다. while 문을 작성하는 양식은 다음과 같다.

while 조건:   # ❶ 첫 행
    본문      # ❷ 조건이 참인 동안 반복 실행할 코드 블록

영어 단어 ‘while’은 “… 인 동안”이라는 뜻이고, while 문을 우리 말로 옮기면 “조건이 유지되는 동안 본문의 코드를 반복 실행하라”라는 뜻으로 풀이할 수 있다.
'''

i = 0

while i < 3: # 유지할 조건을 골라준다 
    print('안녕') # 반복할 반복 코드를 입력해준다
    i += 1 # i에 1을 더한다 식에다 +를 써줘야한다
